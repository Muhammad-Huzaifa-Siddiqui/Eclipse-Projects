package IPClass;

import java.util.Scanner;
import java.util.regex.*;

public class IpApp {
	public static final String regexPattern = "(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])";
	private static Scanner in;

	public static void main(String[] args) {
		// TODO Auto-generated method
		IPClassIdentifier obj = new IPClassIdentifier();
		// in = new Scanner(System.in);
		Pattern ipv4 = Pattern.compile(regexPattern);
		System.out.println("Enter IP address:");
		String ip = "10.168.100.133/26";
																				// String ip = in.next();
																				// System.out.println("Enter subnetmask:"); //submask not explicit
																				// String subMask = in.next();
		String ip1 = ip.substring(0, ip.indexOf("/"));
		String subnetMask = ip.substring(ip.indexOf("/") + 1, ip.length());
		int subMask = Integer.parseInt(subnetMask);
																				// if(subMask<2||subMask>32) {
																				// System.out.print("Subnet Mask not valid");
																				// }
		System.out.println(subnetMask);

		if (ipv4.matcher(ip1).matches()) {
			obj.validSubnet(8);
			System.out.print(obj.DisplayIPClass(ip1));
			obj.CovertBinary(ip1);
			obj.subnetToBinary(subnetMask);
			
//			if (obj.DisplayIPClass(ip1).substring(1, 2).equals("A")) {
//				
//			}

		} else
			System.out.println("Wrong IP address");
																				// System.out.println("Valid subnets for ip: "+ip1);

	}

}
